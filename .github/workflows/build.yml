name: Build and Test Workflow

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Update and Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup  # Solo ejecuta las pruebas si la configuraci칩n fue exitosa
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure, Build, and Run Tests
        run: |
          mkdir build
          cd build
          cmake .. 
          cmake --build .
          ctest --output-on-failure

  analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: tests  # Solo ejecuta el an치lisis si las pruebas fueron exitosas
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para un mejor an치lisis en SonarQube

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Opcional: Activar Quality Gate para fallar si no se cumplen est치ndares
      # - name: Enforce Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}